####################################################################
########################### LOCAL SYSTEM ###########################
####################################################################
NOTE:
By default, Elastic Beanstalk looks for a file called application.py to start your application.
Since this doesn't exist in the Django project that you've created, some adjustment of your application's environment is necessary.
You will also need to set environment variables so that your application's modules can be loaded.
--------------------------------------------------------------------
1) Activate virtualenv eb-ve

2) CD to django project ebdjango.

3) Run pip freeze and save the output to a file named requirements.txt:
(eb-ve) D:\AWS\Elastic_Beanstalk\ebdjango>pip freeze > requirements.txt
note: Elastic Beanstalk uses requirements.txt to determine which package to install on the EC2 instances that run your application.

4) Create a new directory, called .ebextensions:
(eb-ve) D:\AWS\Elastic_Beanstalk\ebdjango>mkdir .ebextensions

5) Within the .ebextensions directory, add a configuration file named django.config with the following text:

option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: ebdjango/wsgi.py

note: This setting, WSGIPath, specifies the location of the WSGI script that Elastic Beanstalk uses to start your application.

6)Deactivate virtualenv.

You've added everything you need to deploy your application on Elastic Beanstalk. 
